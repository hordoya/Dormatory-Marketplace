plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
//	id 'com.google.cloud.tools.appengine' version '2.4.5'
}


group = 'com.example.marketplace'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    // html templating engine
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    // basic starter including tomcat as an embedded web server
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // compile time only - generating setters, getters, other utility methods
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    // added manually
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    //new addition

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//	implementation 'org.postgresql:postgresql'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.0'


    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    // basic starter including tomcat as an embedded web server
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // compile time only - generating setters, getters, other utility methods
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    // added manually
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'com.h2database:h2'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-security'
//	implementation 'com.google.cloud:spring-cloud-gcp-starter:5.0.0'
//	implementation 'com.google.appengine:appengine-api-1.0-sdk:+'
//	implementation 'com.google.appengine:appengine:+'
//	implementation 'com.google.cloud:spring-cloud-gcp-dependencies:4.5.1'
//	implementation 'com.google.cloud:spring-cloud-gcp-starter-sql-postgresql:4.5.1'
//	implementation 'com.google.cloud:google-cloud-secretmanager:2.30.0'
}

test {
    useJUnitPlatform()
}

//appengine{
//	stage {
//		artifact=bootJar.archiveFile.get();
//	}
//	deploy {
//		version="1"
//		projectId="group-project-412615"
//		stopPreviousVersion=true;
//		promote=true;
//	}
//}
//task addSecretsyaml(type: Copy)
//{
//	println("${project.projectDir}")
//	from file("${project.projectDir}/src/main/appengine/secrets.yaml")
//	into "${buildDir}/staged-app/"
//}
//tasks.named("appengineStage"){
//	finalizedBy("addSecretsyaml")
//}

